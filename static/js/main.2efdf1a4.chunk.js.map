{"version":3,"sources":["components/pages/Home.js","library/replaceHarf.js","components/AyatComp.js","components/LoadingComp.js","components/BismillahComp.js","components/surah/Ayats.js","components/surah/TabPanel.js","components/surah/TabMenu.js","components/pages/Surah.js","components/ContentComp.js","components/ThemeComp.js","components/MainComp.js","App.js","serviceWorker.js","index.js"],"names":["Home","Typography","paragraph","replaceHarf","search","new","useStyles","makeStyles","theme","inline","display","ava","width","height","fontSize","color","fontWeight","background","backgroundSize","backgroundRepeat","backgroundPosition","avaList","minWidth","marginRight","ayatPrimary","textAlign","fontFamily","marginBottom","lineHeight","ayatSecondary","replaceAyat","ayat","number","newAyat","i","length","replace","substring","removeBismillah","Ayat","props","classes","ListItem","alignItems","ListItemAvatar","className","Avatar","numberInSurah","ListItemText","primary","secondary","text","trans","Divider","component","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","root","flexGrow","position","zIndex","top","margin","Loading","div","frame","Bismillah","surah","palette","paper","padding","spacing","paddingRight","minHeight","Ayats","useState","ayatArr","setAyatArr","transArr","setTransArr","type","surahId","setSurahId","isLoading","setLoading","AyatJSON","data","surahs","TransJSON","quranArr","push","ay","tr","fetchAyat","obj","Promise","resolve","reject","then","filter","setTimeout","surahFilter","console","log","ayahs","setToState","status","useEffect","List","map","index","key","content","transition","transitions","create","easing","sharp","duration","leavingScreen","maxWidth","TabPanel","children","TabMenu","surahSelected","AppBar","Tabs","value","textColor","indicatorColor","variant","scrollButtons","SurahList","Tab","label","nama","Link","to","toString","selected","Surah","drawerHeader","mixins","toolbar","justifyContent","marginLeft","SurahWithId","match","parseInt","params","Content","useTheme","exact","path","from","Theme","createMuiTheme","main","white","grey","appBar","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","contentShift","toolbarq","img","MainComp","urlArr","window","location","pathname","split","React","open","setOpen","title","setTitle","onItemClick","ListMenu","name","icon","url","Book","ThemeProvider","CssBaseline","clsx","Toolbar","IconButton","aria-label","onClick","edge","src","noWrap","Drawer","anchor","direction","menu","button","ListItemIcon","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qdAWeA,MARf,WACI,OACI,kBAACC,EAAA,EAAD,CAAYC,WAAS,GAArB,yB,6CCLKC,G,OAAc,CACvB,CAAEC,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,qBAAOC,IAAK,gBACtB,CAAED,OAAQ,iCAASC,IAAK,kCACxB,CAAED,OAAQ,6CAAWC,IAAK,8CAC1B,CAACD,OAAQ,6CAAWC,IAAK,gDCtBvBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,QAAS,UAEbC,IAAK,CACDC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVC,MAAO,UACPC,WAAY,OACZC,WAAW,yBACXC,eAAgB,OAChBC,iBAAkB,YAClBC,mBAAoB,UAExBC,QAAS,CACLC,SAAU,OACVC,YAAa,OAEjBC,YAAa,CACTV,SAAU,OACVW,UAAW,QACXC,WAAY,WACZC,aAAc,QACdC,WAAY,MACZZ,WAAY,OAEhBa,cAAe,CACXf,SAAU,YAIlB,SAASgB,EAAY3B,EAAa4B,EAAMC,GAEpC,IADA,IAAIC,EAAUF,EACLG,EAAI,EAAGA,EAAI/B,EAAYgC,OAAQD,IACpCD,EAAUA,EAAQG,QAAQjC,EAAY+B,GAAG9B,OAAQD,EAAY+B,GAAG7B,KAKpE,OAHc,GAAV2B,GAAeD,EAAKI,QAAU,IAA6B,gBAAvBJ,EAAKM,UAAU,EAAE,KACrDJ,EAKR,SAAyBF,GACrB,OAAOA,EAAKM,UAAU,GAAGN,EAAKI,QANhBG,CAAgBL,IAEvBA,EAOI,SAASM,EAAKC,GACzB,IAAMC,EAAUnC,IACRyB,EAASS,EAATT,KAER,OACI,6BACI,kBAACW,EAAA,EAAD,CAAUC,WAAW,cACjB,kBAACC,EAAA,EAAD,CAAgBC,UAAWJ,EAAQpB,SAC/B,kBAACyB,EAAA,EAAD,CAAQD,UAAWJ,EAAQ9B,KAAMoB,EAAKgB,gBAE1C,kBAACC,EAAA,EAAD,CAAcP,QAAS,CAAEQ,QAASR,EAAQjB,YAAa0B,UAAWT,EAAQZ,eACtEoB,QAASnB,EAAY3B,EAAa4B,EAAKoB,KAAMpB,EAAKgB,eAClDG,UAAWnB,EAAKqB,SAGxB,kBAACC,EAAA,EAAD,CAASC,UAAU,Q,oBCpEzBC,EAAsBC,YAAW,CACnCC,aAAc,CACVC,gBAAiB,SAErBC,gBAAiB,CACbD,gBAAiB,YALGF,CAOzBI,KAEGtD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqD,KAAM,CACFC,SAAU,EACV7C,WAAY,cACZ8C,SAAU,WACVC,OAAQ,OACRC,IAAK,KAETC,OAAQ,CACJtD,MAAO,QACPC,OAAQ,WAID,SAASsD,IACpB,IAAM1B,EAAUnC,IAEhB,OACI,yBAAKuC,UAAWJ,EAAQoB,MACpB,kBAACN,EAAD,CAAqBV,UAAWJ,EAAQyB,UC3BpD,IAAM5D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,QAAS,UAEbc,YAAa,CACTV,SAAU,OACVW,UAAW,SACXC,WAAY,WACZC,aAAc,QACdC,WAAY,MACZZ,WAAY,OAEhBoD,IAAK,CACDnD,WAAY,SAEhBoD,MAAO,CACHzD,MAAO,YAIA,SAAS0D,EAAU9B,GAC9B,IAAMC,EAAUnC,IACRiE,EAAU/B,EAAV+B,MAER,OAAc,IAAVA,GAAyB,IAAVA,EAEX,yBAAK1B,UAAWJ,EAAQ2B,KACpB,kBAAC1B,EAAA,EAAD,CAAUC,WAAW,UACjB,yBAAKE,UAAU,aAAf,0NAEJ,kBAACQ,EAAA,EAAD,CAASC,UAAU,QAIxB,K,oBC7BLhD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqD,KAAM,CACFjD,MAAO,OACP8C,gBAAiBlD,EAAMgE,QAAQvD,WAAWwD,MAC1CC,QAASlE,EAAMmE,QAAQ,GACvBhD,aAAc,MACdiD,aAAc,IACdC,UAAW,aA2IJC,OAvIf,SAAetC,GAWX,IAVA,IAAMC,EAAUnC,KADE,EAEYyE,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,KAIJZ,GAAU/B,EAAhB4C,KAAgB5C,EAAV+B,OAJI,EAKYQ,mBAASR,GALrB,mBAKXc,EALW,KAKFC,EALE,OAMcP,oBAAS,GANvB,mBAMXQ,EANW,KAMAC,EANA,KAQZzD,EAAO0D,EAASC,KAAKC,OACrBvC,EAAQwC,EAAUF,KAAKC,OACzBE,EAAW,GACN3D,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAC7B2D,EAASC,KAAK,CAAEC,GAAIhE,EAAKG,GAAI8D,GAAI5C,EAAMlB,KAgC3C,SAAS+D,IA5Ba,IAACC,KA6BLL,EA5BP,IAAIM,SAAQ,SAACC,EAASC,GACzBb,GAAW,GACXY,EAAQF,OA2BPI,MAAK,SAAAvE,GAAI,OAvBE,SAACwE,EAAQL,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBG,YAAW,WACPJ,EACIF,EAAIK,QAAO,SAAChC,GACR,OAAOA,EAAMwB,GAAG/D,QAAUuE,KAC3B,MAER,QAeWE,CAAYlC,EAAOxC,MAChCuE,MAAK,SAAA/B,GAAK,OAZA,SAACA,GAChB,OAAO,IAAI4B,SAAQ,SAACC,EAASC,GACzBK,QAAQC,IAAIpC,GACZU,EAAWV,EAAMwB,GAAGa,OACpBzB,EAAYZ,EAAMyB,GAAGY,OACrBR,GAAQ,MAOOS,CAAWtC,MACzB+B,MAAK,SAAAQ,GACEA,GACAtB,GAAW,MA4E3B,OAhHAkB,QAAQC,IAAId,GAyCZkB,qBAAU,WACNd,MACD,CAACZ,IAmCJ0B,qBAAU,WACNzB,EAAWf,MAkCX,kBAACyC,EAAA,EAAD,CAAMnE,UAAWJ,EAAQoB,MA9BrB0B,EAEI,kBAACpB,EAAD,MAIA,6BACI,kBAACG,EAAD,CAAWC,MAAOA,IASdS,EAAQiC,KAAI,SAAClF,EAAMmF,GAAP,OACR,kBAAC3E,EAAD,CAAM4E,IAAKD,EAAOnF,KAAM,CACpBgB,cAAehB,EAAKgB,cACpBI,KAAMpB,EAAKoB,KACXC,MAAO8B,EAASgC,GAAO/D,cCtIjD7C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4G,QAAS,CACLtD,SAAU,EACVY,QAASlE,EAAMmE,QAAQ,GACvB0C,WAAY7G,EAAM8G,YAAYC,OAAO,SAAU,CAC3CC,OAAQhH,EAAM8G,YAAYE,OAAOC,MACjCC,SAAUlH,EAAM8G,YAAYI,SAASC,gBAEzCC,SAAU,QACV7D,SAAU,WACVC,OAAQ,WAcD6D,OAVf,SAAkBrF,GACd,IAAMC,EAAUnC,KAEhB,OACI,yBAAKuC,UAAWJ,EAAQ2E,SACnB5E,EAAMsF,W,SCdbxH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqD,KAAM,CACFC,SAAU,EACVJ,gBAAiBlD,EAAMgE,QAAQvD,WAAWwD,MAC1CT,OAAQ,IACRD,SAAU,SACVE,IAAK,YAIE,SAAS8D,GAAQvF,GAC5B,IAAMC,EAAUnC,KAER0H,EAAkBxF,EAAlBwF,cAER,OACI,yBAAKnF,UAAWJ,EAAQoB,MACpB,kBAACoE,EAAA,EAAD,CAAQlE,SAAS,SAAShD,MAAM,SAC5B,kBAACmH,EAAA,EAAD,CACIC,MAAOH,EAAgB,EACvBI,UAAU,UACVC,eAAe,UACfC,QAAQ,aACRC,cAAc,QAGVC,GAAUvB,KAAI,SAAC1C,EAAO2C,GAAR,OACV,kBAACuB,EAAA,EAAD,CAAKC,MAAOnE,EAAMoE,KAAMrF,UAAWsF,IAAMC,IAAK3B,EAAQ,GAAG4B,WAAYC,UAAU,SAK/F,kBAAC,GAAD,OCtBGC,OAbf,SAAexG,GAAQ,IACX+B,EAAU/B,EAAV+B,MAER,OACI,kBAACtE,EAAA,EAAD,CAAYC,WAAS,GACjB,kBAAC6H,GAAD,CAASC,cAAezD,IACxB,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAOa,KAAK,QAAQb,MAAO/B,EAAM+B,WCJ3CjE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyI,aAAa,yBACTvI,QAAS,OACTiC,WAAY,SACZ+B,QAASlE,EAAMmE,QAAQ,EAAG,IACvBnE,EAAM0I,OAAOC,SAJR,IAKRC,eAAgB,aAEpBhC,QAAS,CACLtD,SAAU,EACVY,QAASlE,EAAMmE,QAAQ,GACvB0C,WAAY7G,EAAM8G,YAAYC,OAAO,SAAU,CAC3CC,OAAQhH,EAAM8G,YAAYE,OAAOC,MACjCC,SAAUlH,EAAM8G,YAAYI,SAASC,gBAEzCC,SAAU,QACVyB,YAlBY,SAsBdC,GAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACI,kBAAC,GAAD,CAAOhF,MAAOiF,SAASD,EAAME,OAAOpE,QAAS,OAoBtCqE,OAhBf,WACI,IAAMjH,EAAUnC,KAGhB,OAFcqJ,cAGV,0BAAM9G,UAAWJ,EAAQ2E,SACrB,yBAAKvE,UAAWJ,EAAQwG,eACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAIvG,UAAWtD,IACjC,kBAAC,IAAD,CAAO6J,KAAK,kBAAkBvG,UAAWgG,KACzC,kBAAC,IAAD,CAAUQ,KAAK,SAASjB,GAAG,gB,SC1B5BkB,GAhBDC,aAAe,CACzBxF,QAAS,CACLvB,QAAS,CACLgH,KAAM,WAEVC,MAAO,SACPhH,UAAW,CACP+G,KAAM,WAEVE,KAAM,CACFF,KAAM,c,UCaZ3J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqD,KAAM,CACFnD,QAAS,QAEb0J,OAAQ,CACJ/C,WAAY7G,EAAM8G,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQhH,EAAM8G,YAAYE,OAAOC,MACjCC,SAAUlH,EAAM8G,YAAYI,SAASC,iBAG7C0C,YAAa,CACTzJ,MAAM,eAAD,OAbO,IAaP,OACLyI,WAdY,IAeZhC,WAAY7G,EAAM8G,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQhH,EAAM8G,YAAYE,OAAO8C,QACjC5C,SAAUlH,EAAM8G,YAAYI,SAAS6C,kBAG7CC,WAAY,CACRjJ,YAAaf,EAAMmE,QAAQ,IAE/B8F,KAAM,CACF/J,QAAS,QAEbgK,OAAQ,CACJ9J,MA3BY,IA4BZ+J,WAAY,GAEhBC,YAAa,CACThK,MA/BY,KAiChBqI,aAAa,yBACTvI,QAAS,OACTiC,WAAY,SACZ+B,QAASlE,EAAMmE,QAAQ,EAAG,IAEvBnE,EAAM0I,OAAOC,SALR,IAMRC,eAAgB,aAEpBhC,QAAS,CACLtD,SAAU,EACVY,QAASlE,EAAMmE,QAAQ,GACvB0C,WAAY7G,EAAM8G,YAAYC,OAAO,SAAU,CAC3CC,OAAQhH,EAAM8G,YAAYE,OAAOC,MACjCC,SAAUlH,EAAM8G,YAAYI,SAASC,gBAEzC0B,YAhDY,KAkDhBwB,aAAc,CACVxD,WAAY7G,EAAM8G,YAAYC,OAAO,SAAU,CAC3CC,OAAQhH,EAAM8G,YAAYE,OAAO8C,QACjC5C,SAAUlH,EAAM8G,YAAYI,SAAS6C,iBAEzClB,WAAY,GAEhByB,SAAU,CACN7J,WAAY,6IACZF,MAAO,SAEXgK,IAAK,CACDnK,MAAO,OACPW,YAAa,YAIN,SAASyJ,KACpB,IAAMvI,EAAUnC,KACVE,EAAQmJ,cACRsB,EAASC,OAAOC,SAASC,SAASC,MAAM,KAHf,EAIPC,IAAMvG,UAAS,GAJR,mBAIxBwG,EAJwB,KAIlBC,EAJkB,OAKLF,IAAMvG,SAASkG,EAAO,IALjB,mBAKxBQ,EALwB,KAKjBC,EALiB,KAezBC,EAAc,SAAAF,GAAK,OAAI,WACzBD,GAASD,GACTG,EAASD,KAGPG,EAAW,CACb,CAAEC,KAAM,UAAWC,KAAM9L,IAAM+L,IAAK,IACpC,CAAEF,KAAM,aAAcC,KAAME,IAAMD,IAAK,UAG3C,OACI,kBAACE,GAAA,EAAD,CAAezL,MAAOuJ,IAClB,yBAAKlH,UAAWJ,EAAQoB,MACpB,kBAACqI,EAAA,EAAD,MACA,kBAACjE,EAAA,EAAD,CACIlE,SAAS,QACTlB,UAAWsJ,YAAK1J,EAAQ2H,OAAT,eACV3H,EAAQ4H,YAAckB,KAG3B,kBAACa,EAAA,EAAD,CAASvJ,UAAWsJ,YAAK1J,EAAQqI,WAC7B,kBAACuB,EAAA,EAAD,CACItL,MAAM,UACNuL,aAAW,cACXC,QAhCC,WACrBf,GAAQ,IAgCYgB,KAAK,QACL3J,UAAWsJ,YAAK1J,EAAQ+H,WAAYe,GAAQ9I,EAAQgI,OAEpD,kBAAC,IAAD,OAEJ,yBAAKgC,IAAI,0BAA0B5J,UAAWJ,EAAQsI,IAAKnK,MAAM,OACjE,kBAACX,EAAA,EAAD,CAAYqI,QAAQ,KAAKoE,QAAM,GAA/B,eAKR,kBAACC,EAAA,EAAD,CACI9J,UAAWJ,EAAQiI,OACnBpC,QAAQ,aACRsE,OAAO,OACPrB,KAAMA,EACN9I,QAAS,CACLgC,MAAOhC,EAAQmI,cAGnB,yBAAK/H,UAAWJ,EAAQwG,cACpB,kBAACoD,EAAA,EAAD,CAAYE,QAlDN,WACtBf,GAAQ,KAkDiC,QAApBhL,EAAMqM,UAAsB,kBAAC,IAAD,MAAsB,kBAAC,IAAD,QAG3D,kBAACxJ,EAAA,EAAD,MACA,kBAAC2D,EAAA,EAAD,KACK4E,EAAS3E,KAAI,SAAC6F,EAAM5F,GAAP,OACV,kBAACxE,EAAA,EAAD,CAAUqK,QAAM,EAAC5F,IAAKD,EAAO5D,UAAWsF,IAAMC,GAAI,IAAMiE,EAAKf,IAAKQ,QAASZ,EAAYmB,EAAKf,KAAMhD,SAAU0C,IAAUqB,EAAKf,KACvH,kBAACiB,EAAA,EAAD,KAAc,kBAACF,EAAKhB,KAAN,OACd,kBAAC9I,EAAA,EAAD,CAAcC,QAAS6J,EAAKjB,aAK5C,kBAAC,GAAD,QCtJDoB,OARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QCCcC,QACW,cAA7BhC,OAAOC,SAASgC,UAEe,UAA7BjC,OAAOC,SAASgC,UAEhBjC,OAAOC,SAASgC,SAAS5D,MACvB,2DCZN6D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2efdf1a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Typography paragraph>\r\n            Ini Halaman Beranda.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Home;","export const replaceHarf = [\r\n    { search: 'اَٰ', new: 'اٰ' },\r\n    { search: 'بَٰ', new: 'بٰ' },\r\n    { search: 'تَٰ', new: 'تٰ' },\r\n    { search: 'ثَٰ', new: 'ثٰ' },\r\n    { search: 'جَٰ', new: 'جٰ' },\r\n    { search: 'حَٰ', new: 'حٰ' },\r\n    { search: 'خَٰ', new: 'خٰ' },\r\n    { search: 'دَٰ', new: 'دٰ' },\r\n    { search: 'ذَٰ', new: 'ذٰ' },\r\n    { search: 'رَٰ', new: 'رٰ' },\r\n    { search: 'زَٰ', new: 'زٰ' },\r\n    { search: 'سَٰ', new: 'سٰ' },\r\n    { search: 'شَٰ', new: 'شٰ' },\r\n    { search: 'صَٰ', new: 'صٰ' },\r\n    { search: 'ضَٰ', new: 'ضٰ' },\r\n    { search: 'طَٰ', new: 'طٰ' },\r\n    { search: 'ظَٰ', new: 'ظٰ' },\r\n    { search: 'عَٰ', new: 'عٰ' },\r\n    { search: 'غَٰ', new: 'غٰ' },\r\n    { search: 'فَٰ', new: 'فٰ' },\r\n    { search: 'قَٰ', new: 'قٰ' },\r\n    { search: 'كَٰ', new: 'كٰ' },\r\n    { search: 'لَٰ', new: 'لٰ' },\r\n    { search: 'مَٰ', new: 'مٰ' },\r\n    { search: 'نَٰ', new: 'نٰ' },\r\n    { search: 'هَٰ', new: 'هٰ' },\r\n    { search: 'وَٰ', new: 'وٰ' },\r\n    { search: 'يَٰ', new: 'يٰ' },\r\n    { search: 'ءَٰ', new: 'ءٰ' },\r\n    { search: 'للَّه', new: 'للّٰه' },\r\n    { search: 'لِلَّهِ', new: 'لِلّٰهِ' },\r\n    {search: 'اللَّهَ', new: 'اللّٰهَ'},\r\n]","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Alfatihah from '../json/alfatihah.json';\r\nimport { replaceHarf } from '../library/replaceHarf';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    ava: {\r\n        width: '50px',\r\n        height: '50px',\r\n        fontSize: '1rem',\r\n        color: '#0fc7d5',\r\n        fontWeight: 'bold',\r\n        background: `url(./assets/ayat.png)`,\r\n        backgroundSize: '55px',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    avaList: {\r\n        minWidth: '55px',\r\n        marginRight: '5px'\r\n    },\r\n    ayatPrimary: {\r\n        fontSize: '2rem',\r\n        textAlign: 'right',\r\n        fontFamily: 'Uthmanic',\r\n        marginBottom: '0.5em',\r\n        lineHeight: '1.7',\r\n        fontWeight: '600'\r\n    },\r\n    ayatSecondary: {\r\n        fontSize: '1rem'\r\n    }\r\n}));\r\n\r\nfunction replaceAyat(replaceHarf, ayat, number) {\r\n    var newAyat = ayat;\r\n    for (var i = 0; i < replaceHarf.length; i++) {\r\n        newAyat = newAyat.replace(replaceHarf[i].search, replaceHarf[i].new)\r\n    }\r\n    if (number == 1 && ayat.length >= 40 && ayat.substring(0,2) == 'بِ') {\r\n        newAyat = removeBismillah(newAyat)\r\n    }\r\n    return newAyat;\r\n}\r\n\r\nfunction removeBismillah(ayat) {\r\n    return ayat.substring(38,ayat.length)\r\n}\r\n\r\nexport default function Ayat(props) {\r\n    const classes = useStyles();\r\n    const { ayat } = props;\r\n\r\n    return (\r\n        <div>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar className={classes.avaList}>\r\n                    <Avatar className={classes.ava}>{ayat.numberInSurah}</Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText classes={{ primary: classes.ayatPrimary, secondary: classes.ayatSecondary }}\r\n                    primary={replaceAyat(replaceHarf, ayat.text, ayat.numberInSurah)}\r\n                    secondary={ayat.trans}\r\n                />\r\n            </ListItem>\r\n            <Divider component=\"li\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst ColorLinearProgress = withStyles({\r\n    colorPrimary: {\r\n        backgroundColor: 'white',\r\n    },\r\n    barColorPrimary: {\r\n        backgroundColor: '#0fc7d5',\r\n    },\r\n})(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        background: 'transparent',\r\n        position: 'absolute',\r\n        zIndex: '1000',\r\n        top: '0',\r\n    },\r\n    margin: {\r\n        width: '100vw',\r\n        height: '3px',\r\n    },\r\n}));\r\n\r\nexport default function Loading() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ColorLinearProgress className={classes.margin} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    ayatPrimary: {\r\n        fontSize: '2rem',\r\n        textAlign: 'center',\r\n        fontFamily: 'Uthmanic',\r\n        marginBottom: '0.5em',\r\n        lineHeight: '1.7',\r\n        fontWeight: '600',\r\n    },\r\n    div: {\r\n        background: 'white'\r\n    },\r\n    frame: {\r\n        width: '20px'\r\n    }\r\n}));\r\n\r\nexport default function Bismillah(props) {\r\n    const classes = useStyles();\r\n    const { surah } = props;\r\n\r\n    if (surah !== 1 && surah !== 9) {\r\n        return (\r\n            <div className={classes.div}>\r\n                <ListItem alignItems=\"center\">\r\n                    <div className=\"bismillah\" >﻿بِسْمِ اللّٰهِ الرَّحْمٰنِ الرَّحِيمِ</div>\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}","import React, { useState, useEffect } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport axios from 'axios';\r\nimport Ayat from '../AyatComp';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Loading from '../LoadingComp';\r\nimport Bismillah from '../BismillahComp';\r\nimport AyatJSON from '../../json/quran-simple.json';\r\nimport TransJSON from '../../json/translation.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2),\r\n        marginBottom: '1px',\r\n        paddingRight: '0',\r\n        minHeight: '100vh'\r\n    },\r\n}));\r\n\r\nfunction Ayats(props) {\r\n    const classes = useStyles();\r\n    const [ayatArr, setAyatArr] = useState([]);\r\n    const [transArr, setTransArr] = useState([]);\r\n    const { type, surah } = props;\r\n    const [surahId, setSurahId] = useState(surah);\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    const ayat = AyatJSON.data.surahs;\r\n    const trans = TransJSON.data.surahs;\r\n    var quranArr = [];\r\n    for (let i = 0; i < ayat.length; i++) {\r\n        quranArr.push({ ay: ayat[i], tr: trans[i] })\r\n    }\r\n    console.log(quranArr)\r\n\r\n    const setLoadingBar = (obj) => {\r\n        return new Promise((resolve, reject) => {\r\n            setLoading(true);\r\n            resolve(obj)\r\n        })\r\n    }\r\n\r\n    const surahFilter = (filter, obj) => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(\r\n                    obj.filter((surah) => {\r\n                        return surah.ay.number == filter;\r\n                    })[0]\r\n                )\r\n            }, 500);\r\n        })\r\n    }\r\n\r\n    const setToState = (surah) => {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(surah)\r\n            setAyatArr(surah.ay.ayahs);\r\n            setTransArr(surah.tr.ayahs);\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n    function fetchAyat() {\r\n        setLoadingBar(quranArr)\r\n            .then(ayat => surahFilter(surah, ayat))\r\n            .then(surah => setToState(surah))\r\n            .then(status => {\r\n                if (status) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAyat();\r\n    }, [surahId]);\r\n\r\n    // const baseUrl = \"https://api.alquran.cloud/v1/\";\r\n\r\n    // const url = () => {\r\n    //     switch (type) {\r\n    //         case 'surah':\r\n    //             var url = baseUrl + \"surah/\" + surah + \"/editions/quran-simple-enhanced,id.indonesian\";\r\n    //             return url;\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchAyat() {\r\n    //         setLoading(true);\r\n    //         // alert('fetch is called')\r\n    //         const res = await fetch(url())\r\n    //         res\r\n    //             .json()\r\n    //             .then(res => {\r\n    //                 const ayah = res.data[0].ayahs;\r\n    //                 const trans = res.data[1].ayahs;\r\n    //                 var ayatArr = [];\r\n    //                 for (let i = 0; i < ayah.length; i++) {\r\n    //                     ayatArr.push({ ay: ayah[i], tr: trans[i] })\r\n    //                 }\r\n    //                 console.log(ayatArr)\r\n    //                 setAyatArr(ayatArr);\r\n    //                 setLoading(false)\r\n    //             })\r\n    //             .catch(err => console.error(err))\r\n    //     }\r\n    //     fetchAyat();\r\n    // }, [surahId]);\r\n\r\n    useEffect(() => {\r\n        setSurahId(surah)\r\n    });\r\n\r\n    const ayatContent = () => {\r\n        if (isLoading) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Bismillah surah={surah} />\r\n                    {\r\n                        // ayatArr.map((ayat, index) => (\r\n                        //     <Ayat key={index} ayat={{\r\n                        //         numberInSurah: ayat.ay.numberInSurah,\r\n                        //         text: ayat.ay.text,\r\n                        //         trans: ayat.tr.text\r\n                        //     }} />\r\n                        // ))\r\n                        ayatArr.map((ayat, index) => (\r\n                            <Ayat key={index} ayat={{\r\n                                numberInSurah: ayat.numberInSurah,\r\n                                text: ayat.text,\r\n                                trans: transArr[index].text\r\n                            }} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {\r\n                ayatContent()\r\n            }\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default Ayats;","import React from 'react';\r\nimport Ayat from './Ayats';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(0),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        maxWidth: '100vw',\r\n        position: 'relative',\r\n        zIndex: '-20'\r\n    },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\nimport TabPanel from './TabPanel';\r\nimport SurahList from '../../json/surah.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        zIndex: '0',\r\n        position: 'sticky',\r\n        top: '56px'\r\n    },\r\n}));\r\n\r\nexport default function TabMenu(props) {\r\n    const classes = useStyles();\r\n\r\n    const { surahSelected } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"white\">\r\n                <Tabs\r\n                    value={surahSelected - 1}\r\n                    textColor=\"primary\"\r\n                    indicatorColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        SurahList.map((surah, index) => (\r\n                            <Tab label={surah.nama} component={Link} to={(index + 1).toString()} selected={true} />\r\n                        ))\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TabMenu from '../surah/TabMenu';\r\nimport TabPanel from '../surah/TabPanel';\r\nimport Ayats from '../surah/Ayats';\r\n\r\nfunction Surah(props) {\r\n    const { surah } = props;\r\n\r\n    return (\r\n        <Typography paragraph>\r\n            <TabMenu surahSelected={surah} />\r\n            <TabPanel>\r\n                <Ayats type=\"surah\" surah={props.surah} />\r\n            </TabPanel>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Surah;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Home from './pages/Home';\r\nimport Surah from './pages/Surah';\r\nimport TabPanel from './surah/TabPanel';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(0),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        maxWidth: '100vw',\r\n        marginLeft: -drawerWidth,\r\n    },\r\n}));\r\n\r\nconst SurahWithId = ({ match }) => {\r\n    return (\r\n        <Surah surah={parseInt(match.params.surahId, 10)} />\r\n    )\r\n}\r\n\r\nfunction Content() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.drawerHeader} />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/surah/:surahId\" component={SurahWithId} />\r\n                <Redirect from=\"/surah\" to=\"/surah/1\" />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\n\r\nconst Theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#03f74a'\r\n        },\r\n        white: '#fffff',\r\n        secondary: {\r\n            main: '#0fc7d5'\r\n        },\r\n        grey: {\r\n            main: '#efefef'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport default Theme;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Book from '@material-ui/icons/Book';\r\nimport { Link } from 'react-router-dom';\r\nimport Content from './ContentComp';\r\nimport Theme from './ThemeComp';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    toolbarq: {\r\n        background: 'linear-gradient(to right top, #01f847, #26f455, #38f062, #46eb6c, #52e776, #43e485, #36e192, #2edd9e, #00d9b1, #00d4c1, #00cecd, #0dc8d4);',\r\n        color: \"white\",\r\n    },\r\n    img: {\r\n        width: \"30px\",\r\n        marginRight: \"10px\"\r\n    }\r\n}));\r\n\r\nexport default function MainComp() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const urlArr = window.location.pathname.split(\"/\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [title, setTitle] = React.useState(urlArr[1]);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onItemClick = title => () => {\r\n        setOpen(!open);\r\n        setTitle(title);\r\n    }\r\n\r\n    const ListMenu = [\r\n        { name: 'Beranda', icon: Home, url: '' },\r\n        { name: 'Baca Surah', icon: Book, url: 'surah' }\r\n    ];\r\n\r\n    return (\r\n        <ThemeProvider theme={Theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar className={clsx(classes.toolbarq)}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <img src=\"./assets/logo-white.png\" className={classes.img} width=\"30\"/>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Quran Web\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {ListMenu.map((menu, index) => (\r\n                            <ListItem button key={index} component={Link} to={\"/\" + menu.url} onClick={onItemClick(menu.url)} selected={title === menu.url}>\r\n                                <ListItemIcon><menu.icon /></ListItemIcon>\r\n                                <ListItemText primary={menu.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n                <Content />\r\n            </div>\r\n        </ThemeProvider>\r\n\r\n    );\r\n}\r\n","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\nimport Main from \"./components/MainComp\";\nimport { HashRouter } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Main />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `./service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}